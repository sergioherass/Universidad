\\(:: Eq a => [a] -> [a] -> [a])
delete(:: Eq a => a -> [a] -> [a])
deleteBy(:: (a -> a -> Bool) -> a -> [a] -> [a])
deleteFirstsBy(:: (a -> a -> Bool) -> [a] -> [a] -> [a])
elemIndex(:: Eq a => a -> [a] -> Maybe Int  )
elemIndices(:: Eq a => a -> [a] -> [Int])
elem_by(:: (a -> a -> Bool) -> a -> [a] -> Bool)
find(:: (a -> Bool) -> [a] -> Maybe a)
findIndex(:: (a -> Bool) -> [a] -> Maybe Int)
findIndices(:: (a -> Bool) -> [a] -> [Int])
genericDrop(:: Integral a => a -> [b] -> [b])
genericIndex(:: Integral a => [b] -> a -> b)
genericLength(:: Num a => [b] -> a)
genericReplicate(:: Integral a => a -> b -> [b])
genericSplitAt(:: Integral a => a -> [b] -> ([b],[b]))
genericTake(:: Integral a => a -> [b] -> [b])
group(:: Eq a => [a] -> [[a]])
groupBy(:: (a -> a -> Bool) -> [a] -> [[a]])
inits(:: [a] -> [[a]])
insert(:: Ord a => a -> [a] -> [a])
insertBy(:: (a -> a -> Ordering) -> a -> [a] -> [a])
intersect(:: Eq a => [a] -> [a] -> [a])
intersectBy(:: (a -> a -> Bool) -> [a] -> [a] -> [a])
intersperse(:: a -> [a] -> [a])
isPrefixOf(:: Eq a => [a] -> [a] -> Bool)
isSuffixOf(:: Eq a => [a] -> [a] -> Bool)
mapAccumL(:: (a -> b -> (a,c)) -> a -> [b] -> (a,[c]))
mapAccumR(:: (a -> b -> (a,c)) -> a -> [b] -> (a,[c]))
maximumBy(:: (a -> a -> Ordering) -> [a] -> a)
minimumBy(:: (a -> a -> Ordering) -> [a] -> a)
nub(:: Eq a => [a] -> [a])
nubBy(:: (a -> a -> Bool) -> [a] -> [a])
partition(:: (a -> Bool) -> [a] -> ([a],[a]))
select(:: (a -> Bool) -> a -> ([a],[a]) -> ([a],[a]))
sort(:: Ord a => [a] -> [a])
sortBy(:: (a -> a -> Ordering) -> [a] -> [a])
tails(:: [a] -> [[a]])
transpose(:: [[a]] -> [[a]])
unfoldr(:: (a -> Maybe (b,a)) -> a -> [b])
union(:: Eq a => [a] -> [a] -> [a])
unionBy(:: (a -> a -> Bool) -> [a] -> [a] -> [a])
unzip4(:: [(a,b,c,d)] -> ([a],[b],[c],[d]))
unzip5(:: [(a,b,c,d,e)] -> ([a],[b],[c],[d],[e]))
unzip6(:: [(a,b,c,d,e,f)] -> ([a],[b],[c],[d],[e],[f]))
unzip7(:: [(a,b,c,d,e,f,g)] -> ([a],[b],[c],[d],[e],[f],[g]))
wrap(:: a -> [a])
zip4(:: [a] -> [b] -> [c] -> [d] -> [(a,b,c,d)])
zip5(:: [a] -> [b] -> [c] -> [d] -> [e] -> [(a,b,c,d,e)])
zip6(:: [a] -> [b] -> [c] -> [d] -> [e] -> [f] -> [(a,b,c,d,e,f)])
zip7(:: [a] -> [b] -> [c] -> [d] -> [e] -> [f] -> [g] -> [(a,b,c,d,e,f,g)])
zipWith4(:: (a -> b -> c -> d -> e) -> [a] -> [b] -> [c] -> [d] -> [e])
zipWith5(:: (a -> b -> c -> d -> e -> f) -> [a] -> [b] -> [c] -> [d] -> [e] -> [f])
zipWith6(:: (a -> b -> c -> d -> e -> f -> g) -> [a] -> [b] -> [c] -> [d] -> [e] -> [f] -> [g])
zipWith7(:: (a -> b -> c -> d -> e -> f -> g -> h) -> [a] -> [b] -> [c] -> [d] -> [e] -> [f] -> [g] -> [h])
